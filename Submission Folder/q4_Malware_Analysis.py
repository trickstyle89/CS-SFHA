import yara
import pefile

print("Debug: Script started. If you're seeing this, the script is running.")

# Define the YARA rules
yara_rules = """
rule IsPeFile {
    condition:
        uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x4550
}
rule IsElfFile {
    condition:
        uint32(0) == 0x464C457F
}
rule IsZipFile {
    condition:
        uint16(0) == 0x4B50
}
"""

print("Debug: YARA rules defined.")

# Compile the YARA rules
rules = yara.compile(source=yara_rules)
print("Debug: YARA rules compiled.")

# Scan the file
file_path = '/app/part4.file'
try:
    print(f"Debug: Scanning file at {file_path}.")
    matches = rules.match(file_path)
    print(f"Debug: YARA match results: {matches}")
except Exception as e:
    print(f"Debug: Exception occurred while scanning file: {e}")

# Determine the type of the file
file_type = "Unknown"
matched_rules = [match.rule for match in matches]
if "IsPeFile" in matched_rules:
    file_type = "PE"
elif "IsElfFile" in matched_rules:
    file_type = "ELF"
elif "IsZipFile" in matched_rules:
    file_type = "ZIP"

print(f"File Type: {file_type}")

# Initialize suspicious characteristics list
suspicious_characteristics = []

# Check for Imports in the File (only if it's a PE file)
if file_type == "PE":
    try:
        pe = pefile.PE(file_path)
        print("Debug: Successfully loaded the PE file for analysis.")

        dll_count = 0
        function_count = 0
        for entry in pe.DIRECTORY_ENTRY_IMPORT:
            dll_count += 1
            for imp in entry.imports:
                function_count += 1

        print(f"Imported DLLs: {dll_count}, Imported Functions: {function_count}")

        # Analyze Sections of the File
        for section in pe.sections:
            section_name = section.Name.decode().rstrip('\x00')
            permissions = section.Characteristics
            print(f"Section Name: {section_name}, Permissions: {permissions}")

        # Identify Suspicious Characteristics
        if dll_count > 10:
            suspicious_characteristics.append("The file imports a large number of DLLs.")
        if function_count > 50:
            suspicious_characteristics.append("The file imports a large number of functions.")
        if any(section.Characteristics & 0xE0000020 for section in pe.sections):
            suspicious_characteristics.append("A section has both write and execute permissions.")

    except Exception as e:
        print(f"Debug: Exception occurred while analyzing the PE file: {e}")

print(f"Suspicious Characteristics: {suspicious_characteristics}")
